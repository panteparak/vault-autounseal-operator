name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        uv pip install --system -e ".[dev]"

    - name: Lint with ruff
      run: |
        ruff check src/ tests/

    - name: Format check with black
      run: |
        black --check src/ tests/

    - name: Security check with bandit
      run: |
        uv pip install --system bandit[toml]
        bandit -r src/ -f json -o security-report.json || true

    - name: Run tests
      run: |
        pytest tests/ -v --cov=src/vault_autounseal_operator --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  build-and-test-image:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: vault-autounseal-operator:test
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      run: |
        # Test CLI commands work
        docker run --rm vault-autounseal-operator:test vault-operator --help
        docker run --rm vault-autounseal-operator:test vault-operator generate-crd --help
        
        # Test image security
        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
          aquasec/trivy:latest image --exit-code 0 --severity HIGH,CRITICAL \
          vault-autounseal-operator:test

    - name: Generate and validate CRD
      run: |
        mkdir -p generated
        
        # Generate CRD from container
        docker run --rm -v $PWD/generated:/tmp/generated vault-autounseal-operator:test \
          sh -c "vault-operator generate-crd -o /tmp/generated/crd.yaml"
        
        # Install kubectl for validation
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        
        # Validate CRD syntax
        kubectl apply --dry-run=client -f generated/crd.yaml

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: docker-build-artifacts
        path: generated/