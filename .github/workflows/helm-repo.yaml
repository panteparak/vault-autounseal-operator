name: Pages and Helm Repository

on:
  push:
    branches: [main]
    tags: ['v*']
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Check if docs exist
      id: check-docs
      run: |
        if [ -d "docs" ] && [ -f "docs/package.json" ]; then
          echo "docs-exist=true" >> $GITHUB_OUTPUT
          echo "Documentation directory found"
        else
          echo "docs-exist=false" >> $GITHUB_OUTPUT
          echo "No documentation directory found, creating placeholder"
        fi

    - name: Setup Node.js
      if: steps.check-docs.outputs.docs-exist == 'true'
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: npm
        cache-dependency-path: docs/package-lock.json

    - name: Install dependencies
      if: steps.check-docs.outputs.docs-exist == 'true'
      run: |
        cd docs
        npm ci

    - name: Build documentation
      if: steps.check-docs.outputs.docs-exist == 'true'
      run: |
        cd docs
        npm run build

    - name: Create placeholder docs
      if: steps.check-docs.outputs.docs-exist == 'false'
      run: |
        mkdir -p docs-placeholder
        cat > docs-placeholder/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>Documentation - Vault Auto-Unseal Operator</title>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <style>
                body {
                    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
                    max-width: 800px;
                    margin: 0 auto;
                    padding: 20px;
                    line-height: 1.6;
                    text-align: center;
                }
            </style>
        </head>
        <body>
            <h1>üìö Documentation</h1>
            <p>Documentation is being generated automatically.</p>
            <p>Please check back soon or visit the <a href="https://github.com/panteparak/vault-autounseal-operator">GitHub repository</a> for the latest README and documentation.</p>
        </body>
        </html>
        EOF

    - name: Upload docs artifact
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: ${{ steps.check-docs.outputs.docs-exist == 'true' && 'docs/dist/' || 'docs-placeholder/' }}

  build-helm-repo:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get version from tag or commit
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/v* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION (from tag)"
        else
          VERSION="0.1.0-dev"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION (development)"
        fi

    - name: Install Helm
      uses: azure/setup-helm@v4
      with:
        version: '3.12.0'

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: true

    - name: Generate CRDs and update chart
      run: |
        # Install controller-gen
        go install sigs.k8s.io/controller-tools/cmd/controller-gen@v0.14.0

        # Generate CRDs
        mkdir -p config/crd/bases
        $(go env GOPATH)/bin/controller-gen crd:allowDangerousTypes=true paths="./pkg/api/..." output:crd:artifacts:config=config/crd/bases

        # Update chart version
        sed -i.bak 's/^version: .*/version: ${{ steps.version.outputs.version }}/' helm/vault-autounseal-operator/Chart.yaml
        sed -i.bak 's/^appVersion: .*/appVersion: "${{ steps.version.outputs.version }}"/' helm/vault-autounseal-operator/Chart.yaml
        rm -f helm/vault-autounseal-operator/Chart.yaml.bak

        # Copy CRDs to chart templates
        mkdir -p helm/vault-autounseal-operator/templates/crds/
        cp config/crd/bases/*.yaml helm/vault-autounseal-operator/templates/crds/ 2>/dev/null || echo "No CRDs to copy"

    - name: Package Helm chart
      run: |
        mkdir -p helm-repo
        helm package helm/vault-autounseal-operator/ --destination helm-repo/

    - name: Create Helm repository index
      run: |
        cd helm-repo
        helm repo index . --url https://panteparak.github.io/vault-autounseal-operator/helm/

    - name: Upload Helm repository artifact
      uses: actions/upload-artifact@v4
      with:
        name: helm-repository
        path: helm-repo/

  combine-and-deploy:
    needs: [build-docs, build-helm-repo]
    runs-on: ubuntu-latest
    steps:
    - name: Download documentation artifact
      uses: actions/download-artifact@v4
      with:
        name: documentation
        path: site/docs/

    - name: Download Helm repository artifact
      uses: actions/download-artifact@v4
      with:
        name: helm-repository
        path: site/helm/

    - name: Create site index
      run: |
        cat > site/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>Vault Auto-Unseal Operator</title>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <style>
                body {
                    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
                    max-width: 800px;
                    margin: 0 auto;
                    padding: 20px;
                    line-height: 1.6;
                }
                .header { text-align: center; margin-bottom: 40px; }
                .section { margin-bottom: 30px; padding: 20px; border: 1px solid #ddd; border-radius: 8px; }
                .code { background: #f5f5f5; padding: 10px; border-radius: 4px; font-family: monospace; }
                a { color: #0066cc; text-decoration: none; }
                a:hover { text-decoration: underline; }
            </style>
        </head>
        <body>
            <div class="header">
                <h1>üîê Vault Auto-Unseal Operator</h1>
                <p>Kubernetes operator for automatically unsealing HashiCorp Vault instances</p>
            </div>

            <div class="section">
                <h2>üìö Documentation</h2>
                <p>Complete documentation for installation, configuration, and usage:</p>
                <p><a href="./docs/">View Documentation</a></p>
            </div>

            <div class="section">
                <h2>‚öì Helm Repository</h2>
                <p>Install the operator using Helm:</p>
                <div class="code">
                    <p>helm repo add vault-operator https://panteparak.github.io/vault-autounseal-operator/helm/</p>
                    <p>helm repo update</p>
                    <p>helm install vault-autounseal-operator vault-operator/vault-autounseal-operator</p>
                </div>
                <p><a href="./helm/">Browse Helm Repository</a></p>
            </div>

            <div class="section">
                <h2>üöÄ Quick Links</h2>
                <ul>
                    <li><a href="https://github.com/panteparak/vault-autounseal-operator">GitHub Repository</a></li>
                    <li><a href="https://github.com/panteparak/vault-autounseal-operator/releases">Releases</a></li>
                    <li><a href="https://github.com/panteparak/vault-autounseal-operator/issues">Issues</a></li>
                </ul>
            </div>
        </body>
        </html>
        EOF

    - name: List final site structure
      run: |
        echo "Final site structure:"
        find site -type f | head -20
        echo "..."
        echo "Total files: $(find site -type f | wc -l)"

    - name: Upload unified Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: site/

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
