name: Release

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Log in to Quay.io
      uses: docker/login-action@v3
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          panteparak/vault-autounseal-operator
          quay.io/panteparak/vault-autounseal-operator
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest

    - name: Build and push multi-arch images
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  create-release:
    runs-on: ubuntu-latest
    needs: build-and-push-images
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build image for artifact generation
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: vault-autounseal-operator:build
        load: true

    - name: Generate release artifacts
      run: |
        mkdir -p release/manifests
        mkdir -p release/examples

        # Generate CRD from built image
        docker run --rm -v $PWD/release/manifests:/tmp/manifests \
          vault-autounseal-operator:build \
          vault-operator generate-crd -o /tmp/manifests/crd.yaml

        # Copy static manifests
        cp manifests/rbac.yaml manifests/deployment.yaml release/manifests/

        # Copy examples
        cp examples/*.yaml release/examples/

        # Copy install script
        cp install.sh release/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/manifests/*
          release/examples/*
          release/install.sh
        generate_release_notes: true
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
        body: |
          ## üê≥ Container Images

          - **GitHub Container Registry**: `ghcr.io/panteparak/vault-autounseal-operator:${{ github.ref_name }}`
          - **Docker Hub**: `panteparak/vault-autounseal-operator:${{ github.ref_name }}`
          - **Quay.io**: `quay.io/panteparak/vault-autounseal-operator:${{ github.ref_name }}`

          ## üöÄ Quick Install
          ```bash
          curl -sSL https://github.com/panteparak/vault-autounseal-operator/releases/download/${{ github.ref_name }}/install.sh | bash
          ```

          ## üìã What's Changed
